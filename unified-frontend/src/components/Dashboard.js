import React, { useState } from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';

const initialHistory = [
  { run: 1, ad_spend: 1000, prediction: 7500 },
  { run: 2, ad_spend: 3000, prediction: 12500 },
  { run: 3, ad_spend: 7000, prediction: 22500 }
];

function Dashboard() {
  const [adSpend, setAdSpend] = useState('');
  const [prediction, setPrediction] = useState(null);
  const [loading, setLoading] = useState(false);
  const [history, setHistory] = useState(initialHistory);

  const handlePredict = async (e) => {
    e.preventDefault();
    if (!adSpend) return;
    setLoading(true);
    try {
      const res = await fetch('http://localhost:8002/predict', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ ad_spend: Number(adSpend) })
      });
      const data = await res.json();
      setPrediction(data.prediction);
      setHistory(h => [
        ...h,
        { run: h.length + 1, ad_spend: Number(adSpend), prediction: data.prediction }
      ]);
    } catch (e) {
      setPrediction('Error');
    }
    setLoading(false);
  };

  return (
    <div style={{ background: '#fff', borderRadius: 16, boxShadow: '0 4px 24px rgba(0,0,0,0.08)', width: 500, maxWidth: '95vw', padding: 32, margin: '0 auto' }}>
      <h2 style={{ textAlign: 'center', marginBottom: 24, color: '#2d3748', letterSpacing: 1 }}>ðŸ“Š Sales Prediction Dashboard</h2>
      <form onSubmit={handlePredict} style={{ display: 'flex', gap: 12, marginBottom: 24 }}>
        <input
          type="number"
          min="0"
          step="any"
          value={adSpend}
          onChange={e => setAdSpend(e.target.value)}
          placeholder="Advertising Spend ($)"
          style={{ flex: 1, padding: '12px 16px', borderRadius: 8, border: '1px solid #d1d5db', fontSize: 15, outline: 'none' }}
          disabled={loading}
        />
        <button
          type="submit"
          disabled={loading || !adSpend}
          style={{ background: '#3182ce', color: '#fff', border: 'none', borderRadius: 8, padding: '0 24px', fontWeight: 600, fontSize: 15, cursor: loading ? 'not-allowed' : 'pointer', transition: 'background 0.2s' }}
        >
          Predict
        </button>
      </form>
      {loading && <div style={{ textAlign: 'center', color: '#3182ce', marginBottom: 16 }}>Predicting...</div>}
      {prediction !== null && !loading && (
        <div style={{ textAlign: 'center', marginBottom: 24, fontSize: 18 }}>
          <b>Predicted Sales (by AI/ML model):</b> {typeof prediction === 'number' ? `$${prediction.toFixed(2)}` : prediction}
        </div>
      )}
      <LineChart width={420} height={260} data={history} style={{ margin: '0 auto' }}>
        <CartesianGrid strokeDasharray="3 3" />
        <XAxis dataKey="run" label={{ value: 'Run', position: 'insideBottom', offset: -5 }} />
        <YAxis />
        <Tooltip />
        <Legend />
        <Line type="monotone" dataKey="prediction" stroke="#6c63ff" name="Predicted Sales ($)" />
      </LineChart>
      <div style={{ marginTop: 24, color: '#4f4f4f', fontSize: 15, textAlign: 'center', background: '#f7f8fa', borderRadius: 8, padding: 12, border: '1px solid #ececec' }}>
        <b>How it works:</b> Enter an advertising spend value and click Predict. The predicted sales are generated by a machine learning model (Linear Regression) trained on sample data. This demonstrates real AI/ML integration in the dashboard.
      </div>
    </div>
  );
}

export default Dashboard; 